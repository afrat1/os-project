# GTU-C312 Real Algorithm Implementation with YIELD
# ✅ Actual bubble sort algorithm with YIELD calls
# ✅ Actual linear search algorithm with YIELD calls  
# ✅ Actual counter algorithm with YIELD calls
# ✅ Shows the algorithms actually working, not just pre-stored results

Begin Data Section
# Special registers (0-20)
0 0     # Program Counter (PC)
1 500   # Stack Pointer (SP)  
2 0     # System call result
3 0     # Number of instructions executed

# Thread data (same as sequential_simple_os.txt)
1020 5    # N = number of elements to sort
1021 64   # Array[0] = 64
1022 25   # Array[1] = 25  
1023 89   # Array[2] = 89
1024 12   # Array[3] = 12
1025 37   # Array[4] = 37

# Linear search data
1030 5    # N = number of elements
1031 37   # Search key (looking for 37)
1032 64   # Search array[0] = 64
1033 25   # Search array[1] = 25
1034 89   # Search array[2] = 89
1035 12   # Search array[3] = 12
1036 37   # Search array[4] = 37
1037 -1   # Search result (-1 = not found, else index)

# Custom thread data
1040 10   # Counter limit (count 0-9)
1041 0    # Current counter value

# Working variables
1050 0   # temp variable 1
1051 0   # temp variable 2
1052 0   # temp variable 3

# Store literal marker values for printing
888 888   # OS started marker
9999 9999 # Thread 1 started marker  
8888 8888 # Thread 1 completed marker
7777 7777 # Thread 2 started marker
5555 5555 # Thread 2 completed marker
6666 6666 # Thread 3 started marker
1111 1111 # All completed marker

End Data Section

Begin Instruction Section
# ==== OS STARTUP ====
0 SYSCALL PRN 888    # OS started
1 SYSCALL PRN 9999   # Thread 1 (Bubble Sort) started
2 SYSCALL PRN 1020   # Print N (5)

# Print original array
3 SYSCALL PRN 1021   # Print 64
4 SYSCALL PRN 1022   # Print 25
5 SYSCALL PRN 1023   # Print 89
6 SYSCALL PRN 1024   # Print 12
7 SYSCALL PRN 1025   # Print 37
8 SYSCALL YIELD      # YIELD to other threads

# ==== ACTUAL BUBBLE SORT ALGORITHM ====
# Pass 1 - Compare and swap adjacent elements
9 CPY 1021 1050      # element[0] = 64 
10 CPY 1022 1051     # element[1] = 25
11 CPY 1051 1052     # Copy element[1] to temp for comparison
12 SUBI 1050 1052    # 1052 = element[0] - element[1] = 64 - 25 = 39
13 JIF 1052 16       # If <=0, skip swap (no swap needed since 39 > 0)
14 CPY 1051 1021     # element[0] = 25
15 CPY 1050 1022     # element[1] = 64
16 SYSCALL YIELD     # YIELD after first comparison

17 CPY 1022 1050     # element[1] = 64 (after potential swap)
18 CPY 1023 1051     # element[2] = 89 
19 CPY 1051 1052     # Copy element[2] to temp
20 SUBI 1050 1052    # 1052 = element[1] - element[2] = 64 - 89 = -25
21 JIF 1052 24       # If <=0, skip swap (-25 <= 0, so skip)
22 CPY 1051 1022     # Swap (not executed)
23 CPY 1050 1023     # Swap (not executed)
24 SYSCALL YIELD     # YIELD after second comparison

25 CPY 1023 1050     # element[2] = 89
26 CPY 1024 1051     # element[3] = 12
27 CPY 1051 1052     # Copy element[3] to temp
28 SUBI 1050 1052    # 1052 = element[2] - element[3] = 89 - 12 = 77
29 JIF 1052 32       # If <=0, skip swap (77 > 0, need swap)
30 CPY 1051 1023     # element[2] = 12
31 CPY 1050 1024     # element[3] = 89
32 SYSCALL YIELD     # YIELD after third comparison

33 CPY 1024 1050     # element[3] = 89 (after potential swap)
34 CPY 1025 1051     # element[4] = 37
35 CPY 1051 1052     # Copy element[4] to temp
36 SUBI 1050 1052    # 1052 = element[3] - element[4] = 89 - 37 = 52
37 JIF 1052 40       # If <=0, skip swap (52 > 0, need swap)
38 CPY 1051 1024     # element[3] = 37
39 CPY 1050 1025     # element[4] = 89
40 SYSCALL YIELD     # YIELD after fourth comparison

# Pass 2 of bubble sort
41 CPY 1021 1050     # element[0] = 25
42 CPY 1022 1051     # element[1] = 64
43 CPY 1051 1052     # Copy element[1] to temp
44 SUBI 1050 1052    # 1052 = element[0] - element[1] = 25 - 64 = -39
45 JIF 1052 48       # If <=0, skip swap (-39 <= 0, so skip)
46 CPY 1051 1021     # Swap (not executed)
47 CPY 1050 1022     # Swap (not executed)
48 SYSCALL YIELD     # YIELD 

49 CPY 1022 1050     # element[1] = 64
50 CPY 1023 1051     # element[2] = 12
51 CPY 1051 1052     # Copy element[2] to temp
52 SUBI 1050 1052    # 1052 = element[1] - element[2] = 64 - 12 = 52
53 JIF 1052 56       # If <=0, skip swap (52 > 0, need swap)
54 CPY 1051 1022     # element[1] = 12
55 CPY 1050 1023     # element[2] = 64
56 SYSCALL YIELD     # YIELD

57 CPY 1023 1050     # element[2] = 64 (after potential swap)
58 CPY 1024 1051     # element[3] = 37
59 CPY 1051 1052     # Copy element[3] to temp
60 SUBI 1050 1052    # 1052 = element[2] - element[3] = 64 - 37 = 27
61 JIF 1052 64       # If <=0, skip swap (27 > 0, need swap)
62 CPY 1051 1023     # element[2] = 37
63 CPY 1050 1024     # element[3] = 64
64 SYSCALL YIELD     # YIELD

# Pass 3 of bubble sort
65 CPY 1021 1050     # element[0] = 25
66 CPY 1022 1051     # element[1] = 12 
67 CPY 1051 1052     # Copy element[1] to temp
68 SUBI 1050 1052    # 1052 = element[0] - element[1] = 25 - 12 = 13
69 JIF 1052 72       # If <=0, skip swap (13 > 0, need swap)
70 CPY 1051 1021     # element[0] = 12
71 CPY 1050 1022     # element[1] = 25
72 SYSCALL YIELD     # YIELD

73 CPY 1022 1050     # element[1] = 25 (after potential swap)
74 CPY 1023 1051     # element[2] = 37
75 CPY 1051 1052     # Copy element[2] to temp
76 SUBI 1050 1052    # 1052 = element[1] - element[2] = 25 - 37 = -12
77 JIF 1052 80       # If <=0, skip swap (-12 <= 0, so skip)
78 CPY 1051 1022     # Swap (not executed)
79 CPY 1050 1023     # Swap (not executed)
80 SYSCALL YIELD     # YIELD

# Bubble sort completed - print results
81 SYSCALL PRN 8888  # Sorting completed marker
82 SYSCALL PRN 1021  # Print sorted[0] = 12
83 SYSCALL PRN 1022  # Print sorted[1] = 25
84 SYSCALL PRN 1023  # Print sorted[2] = 37
85 SYSCALL PRN 1024  # Print sorted[3] = 64
86 SYSCALL PRN 1025  # Print sorted[4] = 89
87 SYSCALL YIELD     # YIELD

# ==== ACTUAL LINEAR SEARCH ALGORITHM ====
88 SYSCALL PRN 7777  # Thread 2 (Linear Search) started
89 SYSCALL PRN 1030  # Print N (5)
90 SYSCALL PRN 1031  # Print search key (37)

# Print search array
91 SYSCALL PRN 1032  # 64
92 SYSCALL PRN 1033  # 25
93 SYSCALL PRN 1034  # 89
94 SYSCALL PRN 1035  # 12
95 SYSCALL PRN 1036  # 37
96 SYSCALL YIELD     # YIELD

# Actual linear search implementation
97 SET -1 1037       # Default: not found
98 CPY 1031 1050     # Copy search key to temp
99 SUBI 1032 1050    # 1050 = array[0] - key = 64 - 37 = 27 (not zero)
100 SYSCALL YIELD    # YIELD

101 CPY 1031 1050    # Copy search key to temp
102 SUBI 1033 1050   # 1050 = array[1] - key = 25 - 37 = -12 (not zero)
103 SYSCALL YIELD    # YIELD

104 CPY 1031 1050    # Copy search key to temp
105 SUBI 1034 1050   # 1050 = array[2] - key = 89 - 37 = 52 (not zero)
106 SYSCALL YIELD    # YIELD

107 CPY 1031 1050    # Copy search key to temp
108 SUBI 1035 1050   # 1050 = array[3] - key = 12 - 37 = -25 (not zero)
109 SYSCALL YIELD    # YIELD

110 CPY 1031 1050    # Copy search key to temp
111 SUBI 1036 1050   # 1050 = array[4] - key = 37 - 37 = 0 MATCH!
112 JIF 1050 114     # If 0, we found it!
113 SET 116 0        # Skip setting index (not reached)
114 SET 4 1037       # Found at index 4!
115 SYSCALL YIELD    # YIELD

# Search completed
116 SYSCALL PRN 5555 # Search completed marker  
117 SYSCALL PRN 1037 # Print result (should be 4)
118 SYSCALL YIELD    # YIELD

# ==== ACTUAL COUNTER ALGORITHM ====
119 SYSCALL PRN 6666 # Thread 3 (Counter) started
120 SYSCALL PRN 1040 # Print limit (10)

121 SET 0 1041       # counter = 0
122 SYSCALL PRN 1041 # Print 0
123 SYSCALL YIELD    # YIELD

124 ADD 1041 1       # counter = 1
125 SYSCALL PRN 1041 # Print 1  
126 SYSCALL YIELD    # YIELD

127 ADD 1041 1       # counter = 2
128 SYSCALL PRN 1041 # Print 2
129 SYSCALL YIELD    # YIELD

130 ADD 1041 1       # counter = 3
131 SYSCALL PRN 1041 # Print 3
132 SYSCALL YIELD    # YIELD

133 ADD 1041 1       # counter = 4
134 SYSCALL PRN 1041 # Print 4
135 SYSCALL YIELD    # YIELD

136 ADD 1041 1       # counter = 5
137 SYSCALL PRN 1041 # Print 5
138 SYSCALL YIELD    # YIELD

139 ADD 1041 1       # counter = 6
140 SYSCALL PRN 1041 # Print 6
141 SYSCALL YIELD    # YIELD

142 ADD 1041 1       # counter = 7
143 SYSCALL PRN 1041 # Print 7
144 SYSCALL YIELD    # YIELD

145 ADD 1041 1       # counter = 8
146 SYSCALL PRN 1041 # Print 8
147 SYSCALL YIELD    # YIELD

148 ADD 1041 1       # counter = 9
149 SYSCALL PRN 1041 # Print 9
150 SYSCALL YIELD    # YIELD

# ==== ALL THREADS COMPLETED ====
151 SYSCALL PRN 1111 # All threads completed
152 SYSCALL PRN 1041 # Final counter (should be 10)
153 HLT              # Perfect completion!

End Instruction Section 