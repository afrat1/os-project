# Final Working Complete GTU-C312 Operating System
Begin Data Section
# Thread counter and switching
200 1   # Current thread (1, 2, or 3)
201 0   # Temp variable

# Thread 1 data (Bubble Sort)
1000 30    # Element 0 
1001 10    # Element 1
1002 20    # Element 2

# Thread 2 data (Linear Search)
2000 10    # Search key
2001 30    # Element 0
2002 10    # Element 1 (target)
2003 20    # Element 2
2004 -1    # Result

# Thread 3 data (Factorial)
3000 4     # N (calculate 4!)
3001 1     # Result
3002 1     # Current multiplier

End Data Section

Begin Instruction Section

# === OS KERNEL ===
# Boot sequence (0-1)
0 SET 1 200      # Start with thread 1
1 JMP 13         # Jump directly to thread 1

# Scheduler (2-12) - Return point from SYSCALL YIELD
2 ADD 200 1      # Next thread: thread++
3 SET 4 201      # Load max thread number + 1 (4)
4 SUBI 200 201   # current_thread - 4
5 JIF 201 7      # If current_thread < 4, continue
6 SET 1 200      # Reset to thread 1

# Thread dispatcher (7-12)
7 SET 1 201      # Check if thread == 1
8 SUBI 200 201   # current_thread - 1
9 JIF 201 13     # If current_thread == 1, go to bubble sort
10 SET 2 201     # Check if thread == 2  
11 SUBI 200 201  # current_thread - 2
12 JIF 201 23    # If current_thread == 2, go to linear search
# If thread == 3, continue to factorial at instruction 34

# === THREAD 1: BUBBLE SORT (13-22) ===
13 CPY 1000 201   # Get element 0 (30)
14 SUBI 201 1001  # Compare with element 1 (10): 30-10=20
15 JIF 201 18     # If 30 <= 10 (false), no swap
16 CPYI 1001 1000 # Swap: element 0 = 10
17 CPYI 201 1001  # Swap: element 1 = 30
18 SYSCALL PRN 1000 # Print element 0
19 SYSCALL PRN 1001 # Print element 1  
20 SYSCALL PRN 1002 # Print element 2
21 SYSCALL YIELD     # Yield to scheduler (goes to instruction 2)
22 JMP 13            # Continue sorting

# === THREAD 2: LINEAR SEARCH (23-33) ===
23 CPY 2001 201      # Get arr[0] (30)
24 SUBI 201 2000     # Compare with key (10): 30-10=20
25 JIF 201 29        # If equal (false), found
26 CPY 2002 201      # Get arr[1] (10)
27 SUBI 201 2000     # Compare with key (10): 10-10=0
28 JIF 201 30        # If equal (true), found at index 1
29 SET 0 2004        # result = 0 (found at index 0)
30 SET 1 2004        # result = 1 (found at index 1)
31 SYSCALL PRN 2004  # Print search result
32 SYSCALL YIELD     # Yield to scheduler (goes to instruction 2)
33 JMP 23            # Continue searching

# === THREAD 3: FACTORIAL (34-43) ===
34 CPY 3000 201      # Get N (4)
35 JIF 201 40        # If N <= 0, print result and yield
36 MULI 3001 201     # result *= N
37 SUBI 3000 1       # N--
38 SYSCALL PRN 3001  # Print current factorial
39 SYSCALL YIELD     # Yield to scheduler (goes to instruction 2)
40 JMP 34            # Continue factorial
41 HLT               # End program
42 HLT               # Padding
43 HLT               # Padding

End Instruction Section 