# Simple GTU-C312 Operating System - Basic Threading Test
Begin Data Section
# === CPU Registers (0-20) ===
0 0     # Program Counter
1 0     # Stack Pointer  
2 0     # System call result
3 0     # Number of instructions executed
4 0     # Reserved
5 0     # Reserved
6 0     # Reserved
7 0     # Reserved
8 0     # Reserved
9 0     # Reserved
10 0    # Reserved
11 0    # Reserved
12 0    # Reserved
13 0    # Reserved
14 0    # Reserved
15 0    # Reserved
16 0    # Reserved
17 0    # Reserved
18 0    # Reserved
19 0    # Reserved
20 0    # Reserved

# === OS Data Area (21-999) ===
# Simple thread table - just track which thread is running
200 1   # Current thread ID (start with thread 1)
201 0   # Thread switch counter
202 15  # Thread 1 starting instruction address (instruction 15)
203 22  # Thread 2 starting instruction address (instruction 22)

# === Thread Data Areas ===
# Thread control (1000-1099)  
1000 10     # Thread 1 counter value
1001 0      # Thread 1 result
1002 15     # Thread 1 starting instruction address
1003 20     # Thread 2 counter value
1004 0      # Thread 2 result  
1005 22     # Thread 2 starting instruction address

End Data Section

Begin Instruction Section
# === OS KERNEL (Instructions 0-999) ===

# OS Bootup (0-19)
0 SET 1 200     # Set current thread to 1
1 USER 1002     # Switch to user mode, jump to address in 1002 (thread 1 start = 15)

# OS Scheduler - Return point from SYSCALL YIELD (2-14)
2 CPY 200 201   # Get current thread
3 ADD 200 1     # Switch to next thread
4 SET 3 201     # Check if thread > 2
5 SUBI 201 200  # 3 - current_thread, result in current_thread
6 JIF 200 9     # If result ≤ 0 (thread was 3), reset to 1
7 JMP 12        # Continue with current thread
9 SET 1 200     # Reset to thread 1
12 SET 1002 201 # Base address for thread 1 start address
13 ADD 201 200  # Add current thread ID to get correct address (1002 + thread_id)
14 USER 201     # Jump to thread

# === THREAD 1: Simple Counter (15-21) ===
15 CPY 1000 1001  # result = counter
16 SYSCALL PRN 1001 # Print result
17 ADD 1000 -1    # counter--
18 JIF 1000 21    # If counter ≤ 0, exit
19 SYSCALL YIELD  # Yield to other threads
20 JMP 15         # Loop back
21 SYSCALL HLT    # Exit thread

# === THREAD 2: Simple Counter (22-28) ===  
22 CPY 1003 1004  # result = counter
23 SYSCALL PRN 1004 # Print result
24 ADD 1003 -1    # counter--
25 JIF 1003 28    # If counter ≤ 0, exit
26 SYSCALL YIELD  # Yield to other threads
27 JMP 22         # Loop back
28 SYSCALL HLT    # Exit thread

End Instruction Section 